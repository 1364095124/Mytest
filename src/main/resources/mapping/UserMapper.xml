<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lh.dao.UserMapper">
    <sql id="userItem">
        id,account,password,passwordSalt,isAdmin,isDisabled,isDeleted
    </sql>
    <sql id="personItem">
        id,account,name,sex,age,phone,email,photo_url,note
    </sql>


    <insert id="insertUser" parameterType="User">
        INSERT
        INTO
          users(
            id,
            account,
            password,
            passwordSalt,
            isAdmin,
            isDisabled,
            isDeleted
          )

        VALUES
        (
          uuid(),
          #{account},
          #{password},
          '',
          #{isAdmin},
          0,
          0
        )
    </insert>

    <select id="login" parameterType="User" resultType="User">
        SELECT
          <include refid="userItem"/>
        FROM
          users
        WHERE
          account=#{account}
        AND
          password=#{password}
    </select>

    <update id="updateIsDisabled" >
        UPDATE
          users
        SET
          isDisabled=#{isDisabled}
        WHERE
          account=#{account}
    </update>

    <select id="selectUser" parameterType="User" resultType="User">
        SELECT
          <include refid="userItem"/>
        FROM
          users
        <where>
            <if test="null!=account">
                and account=#{account}
            </if>
            <if test="null!=id">
                and id=#{id}
            </if>
        </where>
    </select>

    <select id="selectUserById" parameterType="string" resultType="User">
        SELECT
          <include refid="userItem"/>
        FROM
          users
        WHERE
          id=#{id}
    </select>

    <select id="selectUserByAccount" parameterType="string" resultType="User">
        SELECT
          <include refid="userItem"/>
        FROM
          users
        WHERE
          account=#{account}
    </select>



    <update id="updatePwd" parameterType="User">
        UPDATE
          users
        SET
          password=#{password}
        WHERE
          account=#{account}
    </update>




    <select id="queryRoleByUser" parameterType="string" resultType="string">
        SELECT
          roleName
        FROM
          users as u,
          user_roles as ur
        WHERE
          u.account=ur.account
        AND
          u.account=#{account}
    </select>

    <select id="queryPermissionByRole" parameterType="string" resultType="string">
         SELECT
          rp.permissionName
        FROM
          permissions as p,
          role_permissions as rp
        WHERE
          p.permissionName=rp.permissionName
        AND
          rp.roleName=#{roleName}
    </select>

    <select id="getAllUser" resultType="User">
        SELECT
          <include refid="userItem"/>
        FROM
          users
        WHERE
          isDeleted=0
    </select>

    <select id="queryUserCount" resultType="integer">
        SELECT
          COUNT(*)
        FROM
          users
        WHERE
          isDeleted=0
    </select>

    <select id="getAllErrUser" resultType="ErrorUser">
        SELECT
          a.id,
          a.account,
          a.ip,
          a.createTime,
          a.reason,
          b.isDisabled,
          a.isDeleted
        FROM
          error_users a
        JOIN
          users b
        ON
          a.account=b.account
        WHERE
          a.isDeleted=0
    </select>

    <insert id="addErrUser" parameterType="ErrorUser">
        INSERT
        INTO
          error_users(
            id,
            account,
            ip,
            createTime,
            reason,
            isDeleted
          )
        VALUES(
          UUID(),
          #{account},
          #{ip},
          NOW(),
          #{reason},
          0
        )
    </insert>

    <update id="updateToRight" parameterType="string">
        UPDATE
          error_users
        SET
          state='启用中'
        WHERE
          account=#{account}
    </update>

    <update id="delErrUser" parameterType="string">
        UPDATE
          error_users
        SET
          isDeleted=1
        WHERE
          id=#{id}
    </update>

    <select id="queryErrUserCount" resultType="integer">
        SELECT
          COUNT(*)
        FROM
          error_users
        WHERE
          isDeleted=0
    </select>

    <update id="delUser" parameterType="string">
        UPDATE
          users
        SET
          isDeleted=1
        WHERE
          account=#{account}
    </update>

    <select id="getRest" parameterType="Rest" resultType="integer">
        SELECT
          COUNT(*)
        FROM
          rests
        WHERE
          account=#{account}
        AND
          password=#{password}
        AND
          isDeleted=0
    </select>
</mapper>